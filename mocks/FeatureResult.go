// Code generated by mockery v2.40.1. DO NOT EDIT.

package mocks

import (
	api "github.com/enbility/spine-go/api"
	mock "github.com/stretchr/testify/mock"
)

// FeatureResult is an autogenerated mock type for the FeatureResult type
type FeatureResult struct {
	mock.Mock
}

type FeatureResult_Expecter struct {
	mock *mock.Mock
}

func (_m *FeatureResult) EXPECT() *FeatureResult_Expecter {
	return &FeatureResult_Expecter{mock: &_m.Mock}
}

// HandleResult provides a mock function with given fields: _a0
func (_m *FeatureResult) HandleResult(_a0 api.ResultMessage) {
	_m.Called(_a0)
}

// FeatureResult_HandleResult_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'HandleResult'
type FeatureResult_HandleResult_Call struct {
	*mock.Call
}

// HandleResult is a helper method to define mock.On call
//   - _a0 api.ResultMessage
func (_e *FeatureResult_Expecter) HandleResult(_a0 interface{}) *FeatureResult_HandleResult_Call {
	return &FeatureResult_HandleResult_Call{Call: _e.mock.On("HandleResult", _a0)}
}

func (_c *FeatureResult_HandleResult_Call) Run(run func(_a0 api.ResultMessage)) *FeatureResult_HandleResult_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(api.ResultMessage))
	})
	return _c
}

func (_c *FeatureResult_HandleResult_Call) Return() *FeatureResult_HandleResult_Call {
	_c.Call.Return()
	return _c
}

func (_c *FeatureResult_HandleResult_Call) RunAndReturn(run func(api.ResultMessage)) *FeatureResult_HandleResult_Call {
	_c.Call.Return(run)
	return _c
}

// NewFeatureResult creates a new instance of FeatureResult. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewFeatureResult(t interface {
	mock.TestingT
	Cleanup(func())
}) *FeatureResult {
	mock := &FeatureResult{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
